name: DEV

on:
  push:
    branches:
      - dev
    paths-ignore:
      - '.github/workflows/**'
      - '!.github/workflows/dev.yml'

jobs:

  build-flashcards:
    name: Build flashcards app
    runs-on: ubuntu-latest
    environment: DEV
    steps:

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.16.0'

      - name: Install dependencies
        run: cd apps/flashcards && npm install

      - name: Build flashcards
        run: cd apps/flashcards && npm run build

      - name: Upload built artifact
        uses: actions/upload-artifact@v4
        with:
          name: flashcards-build
          path: apps/flashcards/build


  deploy-server-and-apps:
    needs: build-flashcards
    name: Deploy server and apps
    runs-on: ubuntu-latest
    environment: DEV
    steps:

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download flashcards artifact
        uses: actions/download-artifact@v4
        with:
          name: flashcards-build
          path: apps/flashcards/build

      - name: Create .env file from template
        run: |
          cp .env.template .env
          sed -i "s/{{SERVER_PORT}}/${{secrets.SERVER_PORT}}/g" .env
          sed -i "s/{{DB_DIALECT}}/${{secrets.DB_DIALECT}}/g" .env
          sed -i "s/{{DB_HOST}}/${{secrets.DB_HOST}}/g" .env
          sed -i "s/{{DB_NAME}}/${{secrets.DB_NAME}}/g" .env
          sed -i "s/{{DB_USER}}/${{secrets.DB_USER}}/g" .env
          sed -i "s/{{DB_PASS}}/${{secrets.DB_PASS}}/g" .env

      - name: Setup SSH
        run: |
          mkdir ~/.ssh
          echo "${{secrets.SSH_PRIVATE_KEY}}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          ssh-keyscan ${{secrets.SERVER_HOST}} >> ~/.ssh/known_hosts

      - name: Stop server
        run: ssh ${{secrets.SERVER_USER}}@${{secrets.SERVER_HOST}} "cd ${{secrets.SERVER_ROOT}} && npx pm2 delete ${{secrets.SERVER_NAME}}"
        continue-on-error: true

      - name: Deploy code to server
        run: rsync -arv --delete --files-from='deployment.txt' ./ ${{secrets.SERVER_USER}}@${{secrets.SERVER_HOST}}:${{secrets.SERVER_ROOT}}

      - name: Install dependencies on server
        run: ssh ${{secrets.SERVER_USER}}@${{secrets.SERVER_HOST}} "cd ${{secrets.SERVER_ROOT}} && npm install"

      - name: Migrate database
        run: ssh ${{secrets.SERVER_USER}}@${{secrets.SERVER_HOST}} "source ~/.nvm/nvm.sh && nvm use default && cd ${{secrets.SERVER_ROOT}} && npm run db-migrate"

      - name: Seed database
        run: ssh ${{secrets.SERVER_USER}}@${{secrets.SERVER_HOST}} "source ~/.nvm/nvm.sh && nvm use default && cd ${{secrets.SERVER_ROOT}} && npm run db-seed"

      - name: Start server
        run: ssh ${{secrets.SERVER_USER}}@${{secrets.SERVER_HOST}} "source ~/.nvm/nvm.sh && nvm use default && cd ${{secrets.SERVER_ROOT}} && npx pm2 start server/index.js --name ${{secrets.SERVER_NAME}} && npx pm2 save"
